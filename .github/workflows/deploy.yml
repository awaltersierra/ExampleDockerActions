name: Deployment (Container)
on:
  push:
    branches:
      - main
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  # test:
  #   environment: testing
  #   runs-on: ubuntu-latest
  #   container:
  #     image: node:16
  #   env:
  #     MONGODB_CONNECTION_PROTOCOL: mongodb+srv
  #     MONGODB_CLUSTER_ADDRESS: cluster0.gh5atxq.mongodb.net
  #     MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
  #     MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
  #     PORT: 8080
  #   steps:
  #     - name: Get Code
  #       uses: actions/checkout@v3
  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.npm
  #         key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Run server
  #       run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
  #     - name: Run tests
  #       run: npm test
  #     - name: Output information
  #       run: |
  #         echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy Site
        uses: ./.github/actions/deploy-s3-javascript
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: was-custom-action-hosting
          dist-folder: ./dist
